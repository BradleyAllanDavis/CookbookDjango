# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-12-04 23:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodGroup',
            fields=[
                ('food_group_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='GramMapping',
            fields=[
                ('sequence_number', models.IntegerField(primary_key=True, serialize=False)),
                ('amount_common_measure', models.FloatField()),
                ('common_measure', models.CharField(max_length=128)),
                ('amount_grams', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredient_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('food_group_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cookbook.FoodGroup')),
                ('measurements', models.ManyToManyField(to='cookbook.GramMapping')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientNutrient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('nutrient_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('measured_in', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=64)),
                ('description', models.CharField(blank=True, max_length=2048, null=True)),
                ('instructions', models.CharField(blank=True, max_length=2048, null=True)),
                ('is_private', models.BooleanField()),
                ('food_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.FoodGroup')),
                ('parent_recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('ingredient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Ingredient')),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.GramMapping')),
            ],
        ),
        migrations.CreateModel(
            name='SavedSearch',
            fields=[
                ('search_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('search_name', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='SearchFoodGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include', models.BooleanField()),
                ('food_group_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cookbook.FoodGroup')),
                ('search_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cookbook.SavedSearch')),
            ],
        ),
        migrations.CreateModel(
            name='SearchTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include', models.BooleanField()),
                ('search_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cookbook.SavedSearch')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_name', models.CharField(blank=True, max_length=64, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=32)),
                ('first_name', models.CharField(blank=True, max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedInUser',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cookbook.User')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_recipes',
            field=models.ManyToManyField(related_name='favorite_recipe', to='cookbook.Recipe'),
        ),
        migrations.AddField(
            model_name='user',
            name='submitted_recipes',
            field=models.ManyToManyField(related_name='submitted_recipe', to='cookbook.Recipe'),
        ),
        migrations.AddField(
            model_name='searchtag',
            name='tag_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cookbook.Tag'),
        ),
        migrations.AddField(
            model_name='savedsearch',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.User'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(to='cookbook.Tag'),
        ),
        migrations.AddField(
            model_name='ingredientnutrient',
            name='nutrient_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Nutrient'),
        ),
        migrations.AddField(
            model_name='ingredientnutrient',
            name='recipe_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredientnutrient',
            unique_together=set([('recipe_id', 'nutrient_id')]),
        ),
    ]
